#!/usr/bin/env python3
"""
MAIN - Controlador dos modos 'single' e 'packing'
"""

"""
Este script `main.py` funciona como o controlador principal do programa de alinhamento e empacotamento de PDBs.

 Argumentos e configura√ß√£o do programa
- Usa `argparse` para definir e ler os argumentos da linha de comando.
- O programa pode ser executado em dois modos:
    1. 'single': alinha um √∫nico arquivo PDB a um envelope CIF.
    2. 'packing': seleciona e empacota m√∫ltiplos PDBs no envelope.
- Par√¢metros adicionais incluem n√∫mero m√°ximo de itera√ß√µes ICP, quantidade m√°xima de estruturas
  para o modo packing e n√∫mero de rota√ß√µes iniciais a testar.

Execu√ß√£o dos modos
- Modo 'single': chama o script `icp_aligner.py` via `subprocess`, passando os caminhos de entrada,
  envelope e sa√≠da. Todo o processamento √© feito pelo script `icp_aligner.py`.
- Modo 'packing': chama a fun√ß√£o `run_packing_pipeline` do m√≥dulo `pdb_packing.py`, que lida com
  m√∫ltiplos PDBs, calcula Chamfer Distance e seleciona os melhores para empacotamento.
- Ambos os modos t√™m tratamento de exce√ß√µes para capturar erros durante a execu√ß√£o e fornecer
  mensagens claras de falha, encerrando o programa com `sys.exit(1)`.
"""

import argparse
import subprocess
import sys
import traceback
from pathlib import Path

from pdb_packing import run_packing_pipeline


def parse_arguments():
    parser = argparse.ArgumentParser(description='Programa de alinhamento e empacotamento de PDBs')
    parser.add_argument('mode', choices=['single', 'packing'],
                        help="Modo de execu√ß√£o: 'single' (um PDB e um envelope) ou 'packing' (v√°rios PDBs).")
    parser.add_argument('-i', '--input', required=True, help='Pasta com os arquivos PDB ou o arquivo √∫nico.')
    parser.add_argument('-e', '--envelope', required=True, help='Arquivo CIF do envelope.')
    parser.add_argument('-o', '--output', required=True, help='Pasta de sa√≠da dos resultados.')
    parser.add_argument('--max-iter', type=int, default=50, help='N√∫mero m√°ximo de itera√ß√µes ICP.')
    parser.add_argument('--max-structures', type=int, default=20, help='N√∫mero m√°ximo de estruturas (packing).')
    parser.add_argument('--n-rotations', type=int, default=12, help='N√∫mero de rota√ß√µes iniciais (packing).')
    return parser.parse_args()


def main():
    args = parse_arguments()

    if args.mode == 'single':
        try:
            subprocess.run(
                ['python3', 'icp_aligner.py',
                 '-i', args.input,
                 '-e', args.envelope,
                 '-o', args.output],
                check=True
            )
        except subprocess.CalledProcessError as e:
            print(f"\nüí• Erro ao executar modo single: {e}")
            sys.exit(1)

    elif args.mode == 'packing':
        try:
            run_packing_pipeline(args.input, args.envelope, args.output, args)
        except Exception as e:
            print(f"\nüí• Erro no modo packing: {e}")
            traceback.print_exc()
            sys.exit(1)


if __name__ == "__main__":
    main()
